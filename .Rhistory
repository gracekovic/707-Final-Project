# Creating a categorical variable for age with 14 levels
diabetes_data_clean$Age_cat14 = factor(diabetes_data_clean$Age,
levels = c("1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14"),
labels = c("[18, 24]", "[25, 29]", "[30, 34]", "[35, 39]", "[40, 44]", "[45, 49]", "[50, 54]", "[55, 59]", "[60, 64]", "[65, 69]", "[70, 74]", "[75, 79]", "80 or older", "Don't know/Refused/Missing"))
ggplot(diabetes_data_clean, aes(x = Age_cat14, y = MentHlth)) +
geom_bar(stat = "identity") +
xlab("Age") +
ylab("# of Days in Last Month of Feeling Mentally Unwell") +
ggtitle("Distribution of Mental Health Status Across Age Group")
ggplot(diabetes_data_clean, aes(x = Age_cat14, y = MentHlth)) +
geom_bar(stat = "identity") +
xlab("Age") +
ylab("# of Days in Last Month of Feeling Mentally Unwell") +
ggtitle("Distribution of Mental Health Status Across Age Group") +
theme(axis.text.x = element_text(angle = 45))
levels(diabetes_data_clean$Age_cat14)
diabetes_data_clean %>% filter(Age_cat14 == "Don't know/Refused/Missing")
ggplot(diabetes_data_clean, aes(x = Age_cat14, y = MentHlth)) +
geom_bar(stat = "identity") +
xlab("Age") +
ylab("# of Days in Last Month of Feeling Mentally Unwell") +
ggtitle("Distribution of Mental Health Status Across Age Group") +
theme(axis.text.x = element_text(angle = 90))
ggplot(diabetes_data_clean, aes(x = Age_cat14, y = MentHlth)) +
geom_bar(stat = "identity") +
xlab("Age") +
ylab("# of Days in Last Month of Feeling Mentally Unwell") +
ggtitle("Distribution of Mental Health Status Across Age Group") +
theme(axis.text.x = element_text(angle = 45))
?scale_color_brewer
ggplot(diabetes_data_clean, aes(x = Age_cat14, y = MentHlth)) +
geom_bar(stat = "identity") +
xlab("Age") +
ylab("# of Days in Last Month of Feeling Mentally Unwell") +
ggtitle("Distribution of Mental Health Status Across Age Groups") +
theme(axis.text.x = element_text(angle = 45)) + scale_color_brewer(palette = "GnBu")
ggplot(diabetes_data_clean, aes(x = Age_cat14, y = MentHlth)) +
geom_bar(stat = "identity") +
xlab("Age") +
ylab("# of Days in Last Month of Feeling Mentally Unwell") +
ggtitle("Distribution of Mental Health Status Across Age Groups") +
theme(axis.text.x = element_text(angle = 45)) +
scale_color_brewer(palette = "GnBu")
library(RColorBrewer)
ggplot(diabetes_data_clean, aes(x = Age_cat14, y = MentHlth)) +
geom_bar(stat = "identity") +
xlab("Age") +
ylab("# of Days in Last Month of Feeling Mentally Unwell") +
ggtitle("Distribution of Mental Health Status Across Age Groups") +
theme(axis.text.x = element_text(angle = 45)) +
scale_color_brewer(palette = "GnBu")
ggplot(diabetes_data_clean, aes(x = Age_cat14, y = MentHlth)) +
geom_bar(stat = "identity") +
xlab("Age") +
ylab("# of Days in Last Month of Feeling Mentally Unwell") +
ggtitle("Distribution of Mental Health Status Across Age Groups") +
theme(axis.text.x = element_text(angle = 45)) +
scale_fill_brewer(palette = "GnBu")
library(RColorBrewer)
# Import data
diabetes_data = read.csv("diabetes_012_health_indicators_BRFSS2015.csv")
rm(list = ls())
# Select variables of interest
diabetes_data_clean = diabetes_data %>% select(Sex, Age, Income, AnyHealthcare, PhysHlth, MentHlth)
# Import data
diabetes_data = read.csv("diabetes_012_health_indicators_BRFSS2015.csv")
# Select variables of interest
diabetes_data_clean = diabetes_data %>% select(Sex, Age, Income, AnyHealthcare, PhysHlth, MentHlth)
diabetes_data_clean$Age = as.factor(diabetes_data_clean$Age)
diabetes_data_clean$Sex = as.factor(diabetes_data_clean$Sex)
diabetes_data_clean$Income = as.factor(diabetes_data_clean$Income)
diabetes_data_clean$AnyHealthcare = as.factor(diabetes_data_clean$AnyHealthcare)
diabetes_data_clean$PhysHlth = as.numeric(diabetes_data_clean$PhysHlth)
diabetes_data_clean$MentHlth = as.numeric(diabetes_data_clean$MentHlth)
# Creating a categorical variable for age with 14 levels
diabetes_data_clean$Age_cat14 = factor(diabetes_data_clean$Age,
levels = c("1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14"),
labels = c("[18, 24]", "[25, 29]", "[30, 34]", "[35, 39]", "[40, 44]", "[45, 49]", "[50, 54]", "[55, 59]", "[60, 64]", "[65, 69]", "[70, 74]", "[75, 79]", "80 or older", "Don't know/Refused/Missing"))
ggplot(diabetes_data_clean, aes(x = Age_cat14, y = MentHlth)) +
geom_bar(stat = "identity") +
xlab("Age") +
ylab("# of Days in Last Month of Feeling Mentally Unwell") +
ggtitle("Distribution of Mental Health Status Across Age Groups") +
theme(axis.text.x = element_text(angle = 45)) +
scale_fill_brewer(palette = "GnBu")
# Histogram of mental health
hist(diabetes_data_clean$MentHlth)
ggplot(diabetes_data_clean, aes(x = Age_cat14, y = MentHlth)) +
geom_histogram(stat = "identity")
ggplot(diabetes_data_clean, aes(x = Age_cat14)) +
geom_histogram(stat = "identity")
ggplot(diabetes_data_clean, aes(x = Age_cat14)) +
geom_bar(stat = "identity")
ggplot(diabetes_data_clean, aes(x = Age)) +
geom_bar(stat = "identity")
ggplot(diabetes_data_clean, aes(x = Age_cat14)) +
geom_bar(stat = "identity")
table(diabetes_data_clean$MentHlth)
sum(is.na(diabetes_data_clean))
ggplot(diabetes_data_clean, aes(x = Age_cat14)) +
geom_bar()
names(diabetes_data_clean$Sex)
class(diabetes_data_clean$Sex)
# Structure of cleaned data
str(diabetes_data_clean)
sum(diabetes_data_clean$Sex == 0)
table(diabetes_data_clean)
table(diabetes_data_clean$Sex)
str(diabetes_data_clean)
sum(diabetes_data_clean$Sex == 2)
str(diabetes_data$Sex)
str(diabetes_data)
str(diabetes_data_clean)
# Import data
diabetes_data = read.csv("diabetes_012_health_indicators_BRFSS2015.csv")
# Select variables of interest
diabetes_data_clean = diabetes_data %>% select(Sex, Age, Income, AnyHealthcare, PhysHlth, MentHlth)
diabetes_data_clean$Age = as.factor(diabetes_data_clean$Age)
diabetes_data_clean$Income = as.factor(diabetes_data_clean$Income)
diabetes_data_clean$PhysHlth = as.numeric(diabetes_data_clean$PhysHlth)
diabetes_data_clean$MentHlth = as.numeric(diabetes_data_clean$MentHlth)
str(diabetes_data_clean)
# Import data
diabetes_data = read.csv("diabetes_012_health_indicators_BRFSS2015.csv")
View(diabetes_data_clean)
# Import data
diabetes_data = read.csv("diabetes_012_health_indicators_BRFSS2015.csv")
# Select variables of interest
diabetes_data_clean = diabetes_data %>% select(Sex, Age, Income, AnyHealthcare, PhysHlth, MentHlth)
# Converting variables of interest to appropriate variable types
diabetes_data_clean$PhysHlth = as.numeric(diabetes_data_clean$PhysHlth)
diabetes_data_clean$MentHlth = as.numeric(diabetes_data_clean$MentHlth)
# Creating a categorical variable for age with 14 levels - 14th level is not shown because the current dataset was previously cleaned
diabetes_data_clean$Age_cat14 = factor(diabetes_data_clean$Age,
levels = c("1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14"),
labels = c("[18, 24]", "[25, 29]", "[30, 34]", "[35, 39]", "[40, 44]", "[45, 49]", "[50, 54]", "[55, 59]", "[60, 64]", "[65, 69]", "[70, 74]", "[75, 79]", "80 or older", "Don't know/Refused/Missing"))
# Barplot of counts for the categorical age variable
ggplot(diabetes_data_clean, aes(x = Age_cat14)) +
geom_bar()
ggplot(diabetes_data_clean, aes(x = Age_cat14)) +
geom_bar() +
xlab("Age") +
ylab("# of Days in Last Month of Feeling Mentally Unwell") +
ggtitle("Distribution of Mental Health Status Across Age Groups") +
theme(axis.text.x = element_text(angle = 45)) +
scale_fill_brewer(palette = "GnBu")
ggplot(diabetes_data_clean, aes(x = Age_cat14)) +
geom_bar() +
xlab("Age") +
ggtitle("Distribution of Age Groups") +
theme(axis.text.x = element_text(angle = 45)) +
scale_fill_brewer(palette = "GnBu")
ggplot(diabetes_data_clean, aes(x = Age_cat14)) +
geom_bar() +
xlab("Age") +
ylab("Count") +
ggtitle("Distribution of Age Groups") +
theme(axis.text.x = element_text(angle = 45)) +
scale_fill_brewer(palette = "GnBu")
levels(diabetes_data_clean$Sex)
table(diabetes_data_clean$Sex)
diabetes_data_clean$Sex = factor(diabetes_data_clean$Sex,
levels = c(0, 1),
labels = c("Male", "Female"))
# Import data
diabetes_data = read.csv("diabetes_012_health_indicators_BRFSS2015.csv")
# Select variables of interest
diabetes_data_clean = diabetes_data %>% select(Sex, Age, Income, AnyHealthcare, PhysHlth, MentHlth)
diabetes_data_clean$Sex_2cat = factor(diabetes_data_clean$Sex,
levels = c(0, 1),
labels = c("Male", "Female"))
ggplot(diabetes_data_clean, aes(x = Sex_2cat)) +
geom_bar() +
xlab("Sex") +
ylab("Count") +
ggtitle("Distribution of Sex") +
theme(axis.text.x = element_text(angle = 45)) +
scale_fill_brewer(palette = "GnBu")
ggplot(diabetes_data_clean, aes(x = Sex_2cat, fill = Sex_2cat)) +
geom_bar() +
xlab("Sex") +
ylab("Count") +
ggtitle("Distribution of Sex") +
theme(axis.text.x = element_text(angle = 45)) +
scale_fill_brewer(palette = "GnBu")
ggplot(diabetes_data_clean, aes(x = Age_cat14, fill = Age_cat14)) +
geom_bar() +
xlab("Age") +
ylab("Count") +
ggtitle("Distribution of Age Groups") +
theme(axis.text.x = element_text(angle = 45)) +
scale_fill_brewer(palette = "GnBu")
# Creating a categorical variable for age with 14 levels - 14th level is not shown because the current dataset was previously cleaned
diabetes_data_clean$Age_cat14 = factor(diabetes_data_clean$Age,
levels = c("1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14"),
labels = c("[18, 24]", "[25, 29]", "[30, 34]", "[35, 39]", "[40, 44]", "[45, 49]", "[50, 54]", "[55, 59]", "[60, 64]", "[65, 69]", "[70, 74]", "[75, 79]", "80 or older", "Don't know/Refused/Missing"))
ggplot(diabetes_data_clean, aes(x = Age_cat14, fill = Age_cat14)) +
geom_bar() +
xlab("Age") +
ylab("Count") +
ggtitle("Distribution of Age Groups") +
theme(axis.text.x = element_text(angle = 45)) +
scale_fill_brewer(palette = "GnBu")
ggplot(diabetes_data_clean, aes(x = Age_cat14, fill = Age_cat14)) +
geom_bar() +
xlab("Age") +
ylab("Count") +
ggtitle("Distribution of Age Groups") +
theme(axis.text.x = element_text(angle = 45)) +
scale_fill_brewer(palette = "Spectral")
ggplot(diabetes_data_clean, aes(x = Age_cat14, fill = Age_cat14)) +
geom_bar() +
xlab("Age") +
ylab("Count") +
ggtitle("Distribution of Age Groups") +
theme(axis.text.x = element_text(angle = 45)) +
scale_color_manual(values = c(brewer.pal(name = "Blues"), rev(brewer.pal(name = "BuGn"))))
?brewer.pal
ggplot(diabetes_data_clean, aes(x = Age_cat14, fill = Age_cat14)) +
geom_bar() +
xlab("Age") +
ylab("Count") +
ggtitle("Distribution of Age Groups") +
theme(axis.text.x = element_text(angle = 45)) +
scale_color_manual(values = c(brewer.pal(name = "Blues"), rev(brewer.pal(name = "BuGn"))))
ggplot(diabetes_data_clean, aes(x = Age_cat14, fill = Age_cat14)) +
geom_bar() +
xlab("Age") +
ylab("Count") +
ggtitle("Distribution of Age Groups") +
theme(axis.text.x = element_text(angle = 45)) +
scale_color_manual(values = c(brewer.pal(n = 8, name = "Blues"), rev(brewer.pal(n = 5, name = "BuGn"))))
ggplot(diabetes_data_clean, aes(x = Age_cat14, fill = Age_cat14)) +
geom_bar() +
xlab("Age") +
ylab("Count") +
ggtitle("Distribution of Age Groups") +
theme(axis.text.x = element_text(angle = 45)) +
scale_color_manual(values = c(brewer.pal(n = 8, name = "Blues"), rev(brewer.pal(n = 5, name = "Blues"))))
ggplot(diabetes_data_clean, aes(x = Age_cat14, fill = Age_cat14)) +
geom_bar() +
xlab("Age") +
ylab("Count") +
ggtitle("Distribution of Age Groups") +
theme(axis.text.x = element_text(angle = 45)) +
scale_color_manual(values = c(brewer.pal(n = 8, name = "Blues"), brewer.pal(n = 5, name = "Blues")))
colors = c(brewer.pal(n = 8, name = "Blues"), brewer.pal(n = 5, name = "Blues"))
scale_color_manual(values = colors
ggplot(diabetes_data_clean, aes(x = Age_cat14, fill = Age_cat14)) +
mycolors = c(brewer.pal(n = 8, name = "Blues"), brewer.pal(n = 5, name = "Blues"))
ggplot(diabetes_data_clean, aes(x = Age_cat14, fill = Age_cat14)) +
geom_bar() +
xlab("Age") +
ylab("Count") +
ggtitle("Distribution of Age Groups") +
theme(axis.text.x = element_text(angle = 45)) +
scale_color_manual(values = mycolors)
ggplot(diabetes_data_clean, aes(x = Age_cat14, fill = Age_cat14)) +
geom_bar() +
xlab("Age") +
ylab("Count") +
ggtitle("Distribution of Age Groups") +
theme(axis.text.x = element_text(angle = 45)) +
scale_fill_manual(values = mycolors)
mycolors = c(brewer.pal(n = 8, name = "PiYg"), brewer.pal(n = 5, name = "PiYg"))
ggplot(diabetes_data_clean, aes(x = Age_cat14, fill = Age_cat14)) +
geom_bar() +
xlab("Age") +
ylab("Count") +
ggtitle("Distribution of Age Groups") +
theme(axis.text.x = element_text(angle = 45)) +
scale_fill_brewer(palette = "PiYg")
ggplot(diabetes_data_clean, aes(x = Age_cat14, fill = Age_cat14)) +
geom_bar() +
xlab("Age") +
ylab("Count") +
ggtitle("Distribution of Age Groups") +
theme(axis.text.x = element_text(angle = 45)) +
scale_fill_brewer(palette = "PiYG")
mycolors = c(brewer.pal(n = 8, name = "PiYG"), rev(brewer.pal(n = 5, name = "PiYG")))
ggplot(diabetes_data_clean, aes(x = Age_cat14, fill = Age_cat14)) +
geom_bar() +
xlab("Age") +
ylab("Count") +
ggtitle("Distribution of Age Groups") +
theme(axis.text.x = element_text(angle = 45)) +
scale_fill_manuel(values = mycolors)
ggplot(diabetes_data_clean, aes(x = Age_cat14, fill = Age_cat14)) +
geom_bar() +
xlab("Age") +
ylab("Count") +
ggtitle("Distribution of Age Groups") +
theme(axis.text.x = element_text(angle = 45)) +
scale_color_manuel(values = mycolors)
ggplot(diabetes_data_clean, aes(x = Age_cat14, fill = Age_cat14)) +
geom_bar() +
xlab("Age") +
ylab("Count") +
ggtitle("Distribution of Age Groups") +
theme(axis.text.x = element_text(angle = 45)) +
scale_fill_manual(values = mycolors)
ggplot(diabetes_data_clean, aes(x = Age_cat14, fill = Age_cat14)) +
geom_bar() +
xlab("Age") +
ylab("Count") +
ggtitle("Distribution of Age Groups") +
theme(axis.text.x = element_text(angle = 45, vjust = -1)) +
scale_fill_manual(values = mycolors)
ggplot(diabetes_data_clean, aes(x = Age_cat14, fill = Age_cat14)) +
geom_bar() +
xlab("Age") +
ylab("Count") +
ggtitle("Distribution of Age Groups") +
theme(axis.text.x = element_text(angle = 45, vjust = -0.3)) +
scale_fill_manual(values = mycolors)
ggplot(diabetes_data_clean, aes(x = Age_cat14, fill = Age_cat14)) +
geom_bar() +
xlab("Age") +
ylab("Count") +
ggtitle("Distribution of Age Groups") +
theme(axis.text.x = element_text(angle = 45, vjust = -.1)) +
scale_fill_manual(values = mycolors)
ggplot(diabetes_data_clean, aes(x = Age_cat14, fill = Age_cat14)) +
geom_bar() +
xlab("Age") +
ylab("Count") +
ggtitle("Distribution of Age Groups") +
theme(axis.text.x = element_text(angle = 45, vjust = -.05)) +
scale_fill_manual(values = mycolors)
ggplot(diabetes_data_clean, aes(x = Age_cat14, fill = Age_cat14)) +
geom_bar() +
xlab("Age") +
ylab("Count") +
ggtitle("Distribution of Age Groups") +
theme(axis.text.x = element_text(angle = 45, vjust = -.01)) +
scale_fill_manual(values = mycolors)
ggplot(diabetes_data_clean, aes(x = Age_cat14, fill = Age_cat14)) +
geom_bar() +
xlab("Age") +
ylab("Count") +
ggtitle("Distribution of Age Groups") +
theme(axis.text.x = element_text(angle = 45, vjust = 1)) +
scale_fill_manual(values = mycolors)
ggplot(diabetes_data_clean, aes(x = Age_cat14, fill = Age_cat14)) +
geom_bar() +
xlab("Age") +
ylab("Count") +
ggtitle("Distribution of Age Groups") +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1)) +
scale_fill_manual(values = mycolors)
ggplot(diabetes_data_clean, aes(x = Sex_2cat, fill = Sex_2cat)) +
geom_bar() +
xlab("Sex") +
ylab("Count") +
ggtitle("Distribution of Sex") +
theme(axis.text.x = element_text(angle = 45)) +
scale_fill_manual(values = c("blue", "red"))
ggplot(diabetes_data_clean, aes(x = Sex_2cat, fill = Sex_2cat)) +
geom_bar() +
xlab("Sex") +
ylab("Count") +
ggtitle("Distribution of Sex") +
theme(axis.text.x = element_text(angle = 45)) +
scale_fill_manual(values = c("dodgerblue", "lightred"))
ggplot(diabetes_data_clean, aes(x = Sex_2cat, fill = Sex_2cat)) +
geom_bar() +
xlab("Sex") +
ylab("Count") +
ggtitle("Distribution of Sex") +
theme(axis.text.x = element_text(angle = 45)) +
scale_fill_manual(values = c("dodgerblue", "red2"))
ggplot(diabetes_data_clean, aes(x = Sex_2cat, fill = Sex_2cat)) +
geom_bar() +
xlab("Sex") +
ylab("Count") +
ggtitle("Distribution of Sex") +
theme(axis.text.x = element_text(angle = 45)) +
scale_fill_manual(values = c("dodgerblue", "clay"))
ggplot(diabetes_data_clean, aes(x = Sex_2cat, fill = Sex_2cat)) +
geom_bar() +
xlab("Sex") +
ylab("Count") +
ggtitle("Distribution of Sex") +
theme(axis.text.x = element_text(angle = 45)) +
scale_fill_manual(values = c("dodgerblue", "brown1"))
table(diabetes_data_clean$AnyHealthcare)
diabetes_data_clean$AnyHealthcare_2cat = factor(diabetes_data_clean$AnyHealthcare,
levels = c(0, 1),
labels = c("Yes", "No"))
ggplot(diabetes_data_clean, aes(x = AnyHealthcare_2cat)) +
geom_bar() +
xlab("Have Health Care Coverage?") +
ylab("Count") +
ggtitle("Distribution of Health Care Coverage") +
labs(subtitle = "Do you have any kind of health care coverage, including health insurance, prepaid plans such as HMOs, or government plans such as Medicare, or Indian Health Service?")
ggplot(diabetes_data_clean, aes(x = AnyHealthcare_2cat)) +
geom_bar() +
xlab("Have Health Care Coverage?") +
ylab("Count") +
ggtitle("Distribution of Health Care Coverage") +
labs(subtitle = "Do you have any kind of health care coverage, including health insurance, \n prepaid plans such as HMOs, or government plans such as Medicare, or Indian Health Service?")
ggplot(diabetes_data_clean, aes(x = AnyHealthcare_2cat)) +
geom_bar() +
xlab("Have Health Care Coverage?") +
ylab("Count") +
ggtitle("Distribution of Health Care Coverage") +
labs(subtitle = "Do you have any kind of health care coverage, including health insurance, \n prepaid plans such as HMOs, or government plans such as Medicare, \n or Indian Health Service?")
ggplot(diabetes_data_clean, aes(x = AnyHealthcare_2cat, fill = AnyHealthcare_2cat)) +
geom_bar() +
xlab("Have Health Care Coverage?") +
ylab("Count") +
ggtitle("Distribution of Health Care Coverage") +
labs(subtitle = "Do you have any kind of health care coverage, including health insurance, \n prepaid plans such as HMOs, or government plans such as Medicare, \n or Indian Health Service?")
ggplot(diabetes_data_clean, aes(x = AnyHealthcare_2cat, fill = AnyHealthcare_2cat)) +
geom_bar() +
xlab("Have Health Care Coverage?") +
ylab("Count") +
ggtitle("Distribution of Health Care Coverage") +
labs(subtitle = "Do you have any kind of health care coverage, including health insurance, \n prepaid plans such as HMOs, or government plans such as Medicare, \n or Indian Health Service?") +
theme(legend.position = "none")
ggplot(diabetes_data_clean, aes(x = AnyHealthcare_2cat, fill = AnyHealthcare_2cat)) +
geom_bar() +
xlab("Do they have health care coverage?") +
ylab("Count") +
ggtitle("Distribution of Health Care Coverage") +
labs(subtitle = "Do you have any kind of health care coverage, including health insurance, \n prepaid plans such as HMOs, or government plans such as Medicare, \n or Indian Health Service?") +
theme(legend.position = "none")
ggplot(diabetes_data_clean, aes(x = AnyHealthcare_2cat, fill = AnyHealthcare_2cat)) +
geom_bar() +
xlab("Do you have health care coverage?") +
ylab("Count") +
ggtitle("Distribution of Health Care Coverage") +
labs(subtitle = "Do you have any kind of health care coverage, including health insurance, \n prepaid plans such as HMOs, or government plans such as Medicare, \n or Indian Health Service?") +
theme(legend.position = "none")
ggplot(diabetes_data_clean, aes(x = AnyHealthcare_2cat, fill = AnyHealthcare_2cat)) +
geom_bar() +
xlab("Do you have any kind of health care coverage?") +
ylab("Count") +
ggtitle("Distribution of Health Care Coverage") +
labs(subtitle = "Do you have any kind of health care coverage, including health insurance, \n prepaid plans such as HMOs, or government plans such as Medicare, \n or Indian Health Service?") +
theme(legend.position = "none")
install.packages("raster")
library(raster)
r = raster("LLCP2015.ASC")
r = raster("LLCP2015.asc")
?import.asc
### -- Grace ----------------------------------------------
# rm(list = ls()) # Clear environment
### Packages ###
library(tidyverse)
library(ggplot2)
library(knitr)
library(readxl)
library(proto)
library(gsubfn)
library(patchwork)
library(lintr)
library(scales)
library(survival)
library(survminer)
library(tikzDevice)
library(GGally)
library(scales)
library(car)
library(heatmapFit)
library(cowplot)
# Baseline demographics and symptoms
base_demohist = read.csv("/Users/KovicFamily/Library/CloudStorage/Box-Box/R25_2022_Le_Kovic/Data/BASE_DEMOHIST.csv") %>%
select(patientno, age, sex, ivdu) %>%
rename(PatientNo = patientno) # renaming patientno variable
# Baseline demographics and symptoms
base_demohist = read.csv("/Users/KovicFamily/Library/CloudStorage/Box-Box/R25_2022_Le_Kovic/Data/BASE_DEMOHIST.csv") %>%
select(patientno, age, sex, ivdu) %>%
rename(PatientNo = patientno) # renaming patientno variable
# Baseline demographics and symptoms
base_demohist = read.csv("/Users/KovicFamily/Library/CloudStorage/Box-Box/R25_2022_Le_Kovic/Data/BASE_DEMOHIST.csv") %>%
select(patientno, age, sex, ivdu) %>%
rename(PatientNo = patientno) # renaming patientno variable
### -- Grace ----------------------------------------------
# rm(list = ls()) # Clear environment
### Packages ###
library(tidyverse)
library(ggplot2)
library(knitr)
library(readxl)
library(proto)
library(gsubfn)
library(patchwork)
library(lintr)
library(scales)
library(survival)
library(survminer)
library(tikzDevice)
library(GGally)
library(scales)
library(car)
library(heatmapFit)
read.csv("/Users/KovicFamily/Library/CloudStorage/Box-Box/R25_2022_Le_Kovic/Data/BASE_DEMOHIST.csv")
read.csv("/Users/KovicFamily/Library/CloudStorage/Box-Box/R25_2022_Le_Kovic/Data/BASE_DEMOHIST.csv") %>%
select(patientno, age, sex, ivdu)
# Baseline demographics and symptoms
base_demohist = read.csv("/Users/KovicFamily/Library/CloudStorage/Box-Box/R25_2022_Le_Kovic/Data/BASE_DEMOHIST.csv") %>%
select(patientno, age, sex, ivdu) %>%
rename(PatientNo = patientno) # renaming patientno variable
new_mp1p_dat$Mp1p_num = new_mp1p_dat$Mp1p_char # create a new version of Mp1p
# New Mp1p dataset - contains 20 new Mp1p values added as of 08/03/2022 and the 32 new values added as of 07/26/2022 which were all missing previously
new_mp1p_dat = read_excel("/Users/KovicFamily/Library/CloudStorage/Box-Box/R25_2022_Le_Kovic/Data/TmAg clearance 20220803.xlsx", sheet = "TmAg", na = "") %>%
data.frame() %>%
rename(Mp1p_char = Mp1p.concentration..pg.ml.) %>% # renaming variables
rename(Mp1p_day = day) %>%
select(PatientNo, Mp1p_day, time, Mp1p_char, Reason.for.NA.TmAg) %>% # subsetting
arrange(PatientNo, Mp1p_day, time) # arrange PatientNo by day and time so that day and time are in ascending order
